import telebot
import sqlite3
import logging as log
import math

from telebot import types
from telebot.apihelper import send_message
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton

from database import Database
from config import *

bot = telebot.TeleBot(TOKEN, parse_mode='Markdown')
db = Database(DB_PATH)

interests = db.get_all_interests()
interests_dict = {name.lower(): id for id, name in interests}

admins_command = ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–∫—Ç–æ–≤', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤',
                  '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–∫—Ç', '–î–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥', '–£–¥–∞–ª–∏—Ç—å —Ñ–∞–∫—Ç', '–£–¥–∞–ª–∏—Ç—å —Ç–µ–≥']

# Bot's functions


@bot.message_handler(commands=['start'])
def start_bot(message):
    log.info(f'Start chatting with ({message.from_user.username})')

    if not db.is_user_in_db(message.from_user.username):
        keyboard = get_main_keyboard()
        bot.send_message(message.chat.id, f'*–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.username}!* üôÉ  \n\n–Ø —Å–º–æ—Ç—Ä—é, –≤—ã –∑–¥–µ—Å—å –ø–µ—Ä–≤—ã–π —Ä–∞–∑.\n –î–∞–≤–∞–π—Ç–µ —è –í–∞–º –≤—Å–µ —Ä–∞—Å—Å–∫–∞–∂—É! \n\n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –í–∞—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤. \n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –º–Ω–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã. –ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–æ—á–∫–∏ –ø–æ–¥ —á–∞—Ç–æ–º, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é. \n–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –í–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–±–æ—Ä", —á—Ç–æ–±—ã —è –Ω–∞—á–∞–ª –≤–∞–º –≤—ã–¥–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. \n\n–¢–∞–∫–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª—è—é –Ω–∏–∂–µ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n1. /info - –í—ã–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é \n2. /add - –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã\n3. /help - –ü–æ–º–æ—â—å\n4. /reset - –ü–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã\n', reply_markup=keyboard)

        db.add_user(message.from_user.username)
    else:
        send_main_message(message.chat.id)


@bot.message_handler(commands=['help'])
def get_help_bot(message):
    log.info(f'Send help to ({message.from_user.username})')

    bot.send_message(message.chat.id, '–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤.\n–Ø –æ–±–ª–∞–¥–∞—é —Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:\n1. /start - –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥\n2. /help - –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É\n3. /info - –í—ã–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n4. /reset - –ü–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã\n')


@bot.message_handler(commands=['reset'])
def reset_interests_bot(message):
    log.info(f'Reset interests of ({message.from_user.username})')

    db.remove_all_interests(message.from_user.username)
    db.remove_user_rating(message.from_user.username)

    bot.send_message(
        message.chat.id, '–í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã!')


@bot.message_handler(commands=['add'])
def add_interests_bot(message):
    interests = db.get_no_user_interests(message.from_user.username)
    if len(interests) > 0:
        keyboard = get_keybord_with_interests(interests)
        bot.send_message(
            message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –í–∞–º –ø–æ–¥—Ö–æ–¥—è—Ç, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫–∏.', reply_markup=keyboard)
    else:
        send_all_interest_added(message.chat.id)


@bot.message_handler(commands=['admin'])
def show_admin_panel(message):
    if db.is_admin(message.from_user.username):
        keyboard = get_admin_keyboard()
        bot.send_message(
            message.chat.id, '–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.', reply_markup=keyboard)
    else:
        send_unvailable_admin(message)


@bot.message_handler(commands=['info'])
def get_info_bot(message):
    log.info(f'Send some info to ({message.from_user.username})')

    info = get_list_info(message.from_user.username)
    doc_id = info[0][0]

    doc = db.get_doc(doc_id)

    markup = InlineKeyboardMarkup()
    markup.row_width = 5

    btn = []
    for i in range(1, 6, 1):
        btn.append(InlineKeyboardButton(
            f'{i}', callback_data=f'{doc_id};{i}'))
    markup.add(*btn)

    bot.send_message(
        message.chat.id, f'{doc[0]}\n\n{doc[1]}', reply_markup=markup)
    bot.send_message(
        message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. \n–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ª—É—á—à–µ –ø–æ–¥–±–∏—Ä–∞—Ç—å –¥–ª—è –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!')


@bot.callback_query_handler(func=lambda call: True)
def handle_query_bot(call):
    text = call.data
    doc_id, rating = str(text).split(';')

    log.info(
        f'({call.from_user.username} set rating ({rating}) to doc({doc_id}))')

    db.set_rating_info(call.from_user.username, doc_id, rating)
    bot.send_message(
        call.from_user.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥! \n–ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –í—ã —Å–¥–µ–ª–∞–ª–∏ –º–µ–Ω—è –ª—É—á—à–µ! üòâ')


@bot.message_handler(content_types=['text'])
def process_buttons_bot(message):
    log.info(
        f'Got a message from ({message.from_user.username}) : ({message.text})')

    username = message.from_user.username
    chat_id = message.chat.id
    text = message.text.lower()

    if text in ['/start', '–ø—Ä–∏–≤–µ—Ç', '–∫—Ç–æ —Ç—ã?', '–∫—Ç–æ —Ç—ã', '—Å—Ç–∞—Ä—Ç']:
        start_bot(message)
    elif text in ['/add', '–≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤', '–≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã ‚öôÔ∏è', '–∏–Ω—Ç–µ—Ä–µ—Å—ã']:
        add_interests_bot(message)
    elif text in ['/help', '–ø–æ–º–æ—â—å üíä', '–ø–æ–º–æ–≥–∏ –º–Ω–µ', '–ø–æ–º–æ–≥–∏', '–∫–∞–∫ —Å —Ç–æ–±–æ–π —Ä–∞–±–æ—Ç–∞—Ç—å', '—á—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å']:
        get_help_bot(message)
    elif text in ['/info', '—É–∑–Ω–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëÄ', '–∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã', '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '—Ñ–∞–∫—Ç—ã', '–ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–∫—Ç—ã']:
        get_info_bot(message)
    elif text in ['/reset', '—Å–±—Ä–æ—Å–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã']:
        reset_interests_bot(message)
    elif text in [command.lower() for command in admins_command]:
        if db.is_admin(username):
            if text == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–∫—Ç–æ–≤':
                pass
            elif text == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–≥–æ–≤':
                pass
            elif text == '–¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–∫—Ç':
                pass
            elif text == '–¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥':
                pass
            elif text == '—É–¥–∞–ª–∏—Ç—å —Ñ–∞–∫—Ç':
                pass
            elif text == '—É–¥–∞–ª–∏—Ç—å —Ç–µ–≥':
                pass
        else:
            send_unvailable_admin(message)
    elif text == '–Ω–∞–∑–∞–¥':
        send_main_message(message.chat.id)
    elif interests_dict.get(text) != None:
        is_added = db.add_user_interest(username, interests_dict.get(text))
        if is_added:
            send_added_interest_message(username, chat_id, message.text)
        else:
            send_no_added_interest_message(chat_id)
    else:
        send_error(message)

# Additional functions for bot


def send_main_message(chat_id):
    keyboard = get_main_keyboard()
    bot.send_message(
        chat_id, '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫.', reply_markup=keyboard)


def send_no_added_interest_message(chat_id):
    bot.send_message(chat_id, f'–í—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤!')


def send_added_interest_message(username, chat_id, added_interest_name):
    keyboard = get_keybord_with_interests(db.get_no_user_interests(username))
    bot.send_message(
        chat_id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ ‚Äì {added_interest_name}!\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ª–∏–±–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–∞—Ç–∏–µ–º –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".', reply_markup=keyboard)


def send_all_interest_added(chat_id):
    bot.send_message(
        chat_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤!\n–°–±—Ä–æ—Å—å—Ç–µ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ (/reset), —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∏—Ö –∑–∞–Ω–æ–≤–æ.')


def send_error(message):
    bot.send_message(message.chat.id,
                     '–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É! üôÅ\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã.\n')


def send_unvailable_admin(message):
    bot.send_message(message.chat.id, '–í–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')


def get_main_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    main_list = ['–í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã ‚öôÔ∏è', '–°–±—Ä–æ—Å–∏—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã',
                 '–ü–æ–º–æ—â—å üíä', '–£–∑–Ω–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é üëÄ']
    btns = [KeyboardButton(name) for name in main_list]
    keyboard.add(*btns)
    return keyboard


def get_keybord_with_interests(interests):
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    btns = [KeyboardButton(item[1]) for item in interests]
    btns.append(get_back_button())
    keyboard.add(*btns)
    return keyboard


def get_admin_keyboard():
    keyboard = telebot.types.ReplyKeyboardMarkup(True)
    _btns = [KeyboardButton(command) for command in admins_command]
    keyboard.add(*_btns)
    return keyboard


def get_back_button():
    return KeyboardButton('–ù–∞–∑–∞–¥')


def get_list_info(username):
    unappreciated = db.get_unappreciated_docs(username)
    appreciated = db.get_appreciated_docs(username)
    matrix = db.get_rating_matrix()

    result = []

    if len(appreciated) > 0:
        for appreciated_id in appreciated:
            for unappreciated_id in unappreciated:
                _sum = 0
                sqrt_1 = 0
                sqrt_2 = 0

                for marks in matrix.values():
                    if marks[appreciated_id] != 0 and marks[unappreciated_id] != 0:
                        _sum += marks[appreciated_id] + \
                            marks[unappreciated_id]
                    sqrt_1 += marks[appreciated_id]**2
                    sqrt_2 += marks[unappreciated_id]**2

                similarity = 0 if sqrt_1 * \
                    sqrt_2 == 0 else _sum / (sqrt_1 * sqrt_2)

                similarity_interests = db.get_similarity_interest(
                    username, unappreciated_id)

                if similarity_interests != 0:
                    similarity += math.log10(similarity_interests)**2

                result.append((unappreciated_id, similarity))
    else:
        for unappreciated_id in unappreciated:
            similarity = 0

            similarity_interests = db.get_similarity_interest(
                username, unappreciated_id)

            if similarity_interests != 0:
                similarity += math.log(similarity_interests)**2

            result.append((unappreciated_id, similarity))

    result.sort(key=lambda x: x[1], reverse=True)
    return result


bot.polling()
